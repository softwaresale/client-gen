// Code generated by mockery v2.46.3. DO NOT EDIT.

package outputs_mocks

import mock "github.com/stretchr/testify/mock"

// MockCompilerOutputLocation is an autogenerated mock type for the CompilerOutputLocation type
type MockCompilerOutputLocation struct {
	mock.Mock
}

// Location provides a mock function with given fields:
func (_m *MockCompilerOutputLocation) Location() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Location")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Name provides a mock function with given fields:
func (_m *MockCompilerOutputLocation) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewMockCompilerOutputLocation creates a new instance of MockCompilerOutputLocation. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCompilerOutputLocation(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCompilerOutputLocation {
	mock := &MockCompilerOutputLocation{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
