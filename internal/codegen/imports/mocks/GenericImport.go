// Code generated by mockery v2.46.3. DO NOT EDIT.

package importsmocks

import mock "github.com/stretchr/testify/mock"

// MockGenericImport is an autogenerated mock type for the GenericImport type
type MockGenericImport struct {
	mock.Mock
}

// ProvidedEntities provides a mock function with given fields:
func (_m *MockGenericImport) ProvidedEntities() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ProvidedEntities")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Provider provides a mock function with given fields:
func (_m *MockGenericImport) Provider() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Provider")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewMockGenericImport creates a new instance of MockGenericImport. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGenericImport(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGenericImport {
	mock := &MockGenericImport{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
